// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OutputInitParameters struct {

	// (String) Fingerprint of the Elasticsearch CA certificate.
	// Fingerprint of the Elasticsearch CA certificate.
	CASha256 *string `json:"caSha256,omitempty" tf:"ca_sha256,omitempty"`

	// (String) Fingerprint of trusted CA.
	// Fingerprint of trusted CA.
	CATrustedFingerprint *string `json:"caTrustedFingerprint,omitempty" tf:"ca_trusted_fingerprint,omitempty"`

	// (Boolean) Make this output the default for agent integrations.
	// Make this output the default for agent integrations.
	DefaultIntegrations *bool `json:"defaultIntegrations,omitempty" tf:"default_integrations,omitempty"`

	// (Boolean) Make this output the default for agent monitoring.
	// Make this output the default for agent monitoring.
	DefaultMonitoring *bool `json:"defaultMonitoring,omitempty" tf:"default_monitoring,omitempty"`

	// (List of String) A list of hosts.
	// A list of hosts.
	Hosts []*string `json:"hosts,omitempty" tf:"hosts,omitempty"`

	// (String) The name of the output.
	// The name of the output.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Unique identifier of the output.
	// Unique identifier of the output.
	OutputID *string `json:"outputId,omitempty" tf:"output_id,omitempty"`

	// (Block List, Max: 1) SSL configuration. (see below for nested schema)
	// SSL configuration.
	SSL []SSLInitParameters `json:"ssl,omitempty" tf:"ssl,omitempty"`

	// (String) The output type.
	// The output type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OutputObservation struct {

	// (String) Fingerprint of the Elasticsearch CA certificate.
	// Fingerprint of the Elasticsearch CA certificate.
	CASha256 *string `json:"caSha256,omitempty" tf:"ca_sha256,omitempty"`

	// (String) Fingerprint of trusted CA.
	// Fingerprint of trusted CA.
	CATrustedFingerprint *string `json:"caTrustedFingerprint,omitempty" tf:"ca_trusted_fingerprint,omitempty"`

	// (Boolean) Make this output the default for agent integrations.
	// Make this output the default for agent integrations.
	DefaultIntegrations *bool `json:"defaultIntegrations,omitempty" tf:"default_integrations,omitempty"`

	// (Boolean) Make this output the default for agent monitoring.
	// Make this output the default for agent monitoring.
	DefaultMonitoring *bool `json:"defaultMonitoring,omitempty" tf:"default_monitoring,omitempty"`

	// (List of String) A list of hosts.
	// A list of hosts.
	Hosts []*string `json:"hosts,omitempty" tf:"hosts,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the output.
	// The name of the output.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Unique identifier of the output.
	// Unique identifier of the output.
	OutputID *string `json:"outputId,omitempty" tf:"output_id,omitempty"`

	// (Block List, Max: 1) SSL configuration. (see below for nested schema)
	// SSL configuration.
	SSL []SSLObservation `json:"ssl,omitempty" tf:"ssl,omitempty"`

	// (String) The output type.
	// The output type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OutputParameters struct {

	// (String) Fingerprint of the Elasticsearch CA certificate.
	// Fingerprint of the Elasticsearch CA certificate.
	// +kubebuilder:validation:Optional
	CASha256 *string `json:"caSha256,omitempty" tf:"ca_sha256,omitempty"`

	// (String) Fingerprint of trusted CA.
	// Fingerprint of trusted CA.
	// +kubebuilder:validation:Optional
	CATrustedFingerprint *string `json:"caTrustedFingerprint,omitempty" tf:"ca_trusted_fingerprint,omitempty"`

	// (String, Sensitive) Advanced YAML configuration. YAML settings here will be added to the output section of each agent policy.
	// Advanced YAML configuration. YAML settings here will be added to the output section of each agent policy.
	// +kubebuilder:validation:Optional
	ConfigYamlSecretRef *v1.SecretKeySelector `json:"configYamlSecretRef,omitempty" tf:"-"`

	// (Boolean) Make this output the default for agent integrations.
	// Make this output the default for agent integrations.
	// +kubebuilder:validation:Optional
	DefaultIntegrations *bool `json:"defaultIntegrations,omitempty" tf:"default_integrations,omitempty"`

	// (Boolean) Make this output the default for agent monitoring.
	// Make this output the default for agent monitoring.
	// +kubebuilder:validation:Optional
	DefaultMonitoring *bool `json:"defaultMonitoring,omitempty" tf:"default_monitoring,omitempty"`

	// (List of String) A list of hosts.
	// A list of hosts.
	// +kubebuilder:validation:Optional
	Hosts []*string `json:"hosts,omitempty" tf:"hosts,omitempty"`

	// (String) The name of the output.
	// The name of the output.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Unique identifier of the output.
	// Unique identifier of the output.
	// +kubebuilder:validation:Optional
	OutputID *string `json:"outputId,omitempty" tf:"output_id,omitempty"`

	// (Block List, Max: 1) SSL configuration. (see below for nested schema)
	// SSL configuration.
	// +kubebuilder:validation:Optional
	SSL []SSLParameters `json:"ssl,omitempty" tf:"ssl,omitempty"`

	// (String) The output type.
	// The output type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SSLInitParameters struct {

	// (String) Client SSL certificate.
	// Client SSL certificate.
	Certificate *string `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// (List of String) Server SSL certificate authorities.
	// Server SSL certificate authorities.
	CertificateAuthorities []*string `json:"certificateAuthorities,omitempty" tf:"certificate_authorities,omitempty"`
}

type SSLObservation struct {

	// (String) Client SSL certificate.
	// Client SSL certificate.
	Certificate *string `json:"certificate,omitempty" tf:"certificate,omitempty"`

	// (List of String) Server SSL certificate authorities.
	// Server SSL certificate authorities.
	CertificateAuthorities []*string `json:"certificateAuthorities,omitempty" tf:"certificate_authorities,omitempty"`
}

type SSLParameters struct {

	// (String) Client SSL certificate.
	// Client SSL certificate.
	// +kubebuilder:validation:Optional
	Certificate *string `json:"certificate" tf:"certificate,omitempty"`

	// (List of String) Server SSL certificate authorities.
	// Server SSL certificate authorities.
	// +kubebuilder:validation:Optional
	CertificateAuthorities []*string `json:"certificateAuthorities,omitempty" tf:"certificate_authorities,omitempty"`

	// (String, Sensitive) Client SSL certificate key.
	// Client SSL certificate key.
	// +kubebuilder:validation:Required
	KeySecretRef v1.SecretKeySelector `json:"keySecretRef" tf:"-"`
}

// OutputSpec defines the desired state of Output
type OutputSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OutputParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OutputInitParameters `json:"initProvider,omitempty"`
}

// OutputStatus defines the observed state of Output.
type OutputStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OutputObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Output is the Schema for the Outputs API. Creates or updates a Fleet Output.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,elasticstack}
type Output struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   OutputSpec   `json:"spec"`
	Status OutputStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OutputList contains a list of Outputs
type OutputList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Output `json:"items"`
}

// Repository type metadata.
var (
	Output_Kind             = "Output"
	Output_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Output_Kind}.String()
	Output_KindAPIVersion   = Output_Kind + "." + CRDGroupVersion.String()
	Output_GroupVersionKind = CRDGroupVersion.WithKind(Output_Kind)
)

func init() {
	SchemeBuilder.Register(&Output{}, &OutputList{})
}
